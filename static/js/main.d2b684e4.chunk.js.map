{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["defaultCardItems","key","setCardStatus","indexes","cardIndex","styles","StackedCarousel","containerClassName","cardClassName","leftButton","rightButton","autoRotate","cardItems","children","useState","previousIndex","currentIndex","nextIndex","setIndexes","handleCardTransition","useCallback","prevState","handleLeftButton","useEffect","transitionInterval","setInterval","clearInterval","console","className","container","onClick","card","index","App","ReactDOM","render","document","getElementById"],"mappings":"uXAGMA,EAAmB,CAErB,yBAAKC,IAAI,QACP,4BADF,cAEE,2BAJmB,6DAQrB,yBAAKA,IAAI,QACP,4BADF,eAEE,2BAVmB,6DAcrB,yBAAKA,IAAI,QACP,4BADF,cAEE,2BAhBN,8DAsBMC,EAAgB,SAACC,EAASC,GAC9B,OAAID,iBAAJ,EACUE,EAAR,OACSF,cAAJ,EACEE,EAAP,KACSF,kBAAJ,EACEE,EAAP,KAEKA,EAAP,UAGWC,EAAkB,SAAC,GAAoG,IAAnGC,EAAmG,EAAnGA,mBAAoBC,EAA+E,EAA/EA,cAA+E,IAAhEC,kBAAgE,MAArD,IAAqD,MAAhDC,mBAAgD,MAApC,IAAoC,MAA/BC,kBAA+B,SAC5HC,EAD4H,EAAdC,UACpH,EADkI,EAEpGC,mBAAS,CACrCC,cAAeH,SADsB,EAErCI,aAFqC,EAGrCC,UAAW,IAHNd,EAF2H,KAElHe,EAFkH,KAQ5HC,EAAuBC,uBAAY,WAGnCjB,gBAAwBS,SAA5B,EACEM,EAAW,CACTH,cAAeH,SADN,EAETI,aAFS,EAGTC,UAAW,IAGbC,GAAW,SAAAG,GAAS,MAAK,CACvBN,cAAeM,EADQ,aAEvBL,aAAcK,eAFS,EAGvBJ,UACEI,mBAA+BT,EAA/BS,SAEIA,eAAyB,QAGlC,CAAClB,EAnBJ,eAqBMmB,EAAmBF,uBAAY,WAG/BjB,gBAAJ,EACEe,EAAW,CACTH,cAAeH,SADN,EAETI,aAAcJ,SAFL,EAGTK,UAAW,IAIbC,GAAW,SAAAG,GAAS,MAAK,CACvBJ,UAAWI,EADY,aAEvBL,aAAcK,eAFS,EAGvBN,cACEM,oBACIT,SADJS,EAEIA,eAAyB,QAGlC,CAAClB,EApBJ,eAgCA,OATAoB,qBAAU,WACR,IAAMC,EAAqBC,aAAY,WACrCd,GAAcQ,MADhB,KAGA,OAAO,kBAAMO,cAAN,MACN,CAACP,EAAsBhB,EAL1BoB,IAQAI,eAEE,yBAAKC,UAAS,GAAKvB,EAAOwB,WACxB,0BAAMC,QAASR,GADjB,GAEE,wBAAIM,UAAcvB,EAAL,iBAA4BE,GACtCK,EAAA,KAAc,qBACb,wBACEX,IAAK8B,EADP,IAEEH,UAAcpB,EAAL,IAAsBH,EAAtB,SAAqCH,EAAcC,EAAS6B,IAH1D,OASf,0BAAMF,QAASX,GAbrB,KC5Cac,G,KAhDH,WAEV,OACE,6BACE,8CACA,kBAAC,EAAD,CACEtB,YAAY,EACZJ,mBAAoB,YACpBC,cAAc,OACdC,WAAY,gCAAS,KACrBC,YAAa,gCAAS,MAItB,yBAAKT,IAAK,UACR,uCAGF,yBAAKA,IAAK,UACR,uCAGF,yBAAKA,IAAK,UACR,uCAGF,yBAAKA,IAAK,UACR,uCAGF,yBAAKA,IAAK,WACR,uCAGF,yBAAKA,IAAK,WACR,uCAGF,yBAAKA,IAAK,WACR,2CCtCViC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d2b684e4.chunk.js","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport styles from './styles.module.css'\n\nconst defaultCardItems = [\n  (\n    <div key=\"key1\">\n      <h2>First Item</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  ),\n  (\n    <div key=\"key2\">\n      <h2>Second Item</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  ),\n  (\n    <div key=\"key3\">\n      <h2>Third Item</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n];\n\n\nconst setCardStatus = (indexes, cardIndex) => {\n  if (indexes.currentIndex === cardIndex) {\n    return  styles.active;\n  } else if (indexes.nextIndex === cardIndex) {\n    return styles.next;\n  } else if (indexes.previousIndex === cardIndex) {\n    return styles.prev;\n  }\n  return styles.inactive;\n}\n\nexport const StackedCarousel = ({containerClassName, cardClassName, leftButton=\"<\", rightButton=\">\", autoRotate=true, children}) => {\n  const cardItems = children || defaultCardItems;\n  const [indexes, setIndexes] = useState({\n    previousIndex: cardItems.length-1,\n    currentIndex: 0,\n    nextIndex: 1\n  });\n\n  const handleCardTransition = useCallback(() => {\n    // If we've reached the end, start again from the first card,\n    // but carry previous value over\n    if (indexes.currentIndex >= cardItems.length - 1) {\n      setIndexes({\n        previousIndex: cardItems.length - 1,\n        currentIndex: 0,\n        nextIndex: 1\n      });\n    } else {\n      setIndexes(prevState => ({\n        previousIndex: prevState.currentIndex,\n        currentIndex: prevState.currentIndex + 1 ,\n        nextIndex:\n          prevState.currentIndex + 2 === cardItems.length\n            ? 0\n            : prevState.currentIndex + 2\n      }));\n    }\n  }, [indexes.currentIndex]);\n\n  const handleLeftButton = useCallback(() => {\n    // If we've reached the end, start again from the first card,\n    // but carry previous value over\n    if (indexes.currentIndex <= 0) {\n      setIndexes({\n        previousIndex: cardItems.length - 2,\n        currentIndex: cardItems.length - 1,\n        nextIndex: 0\n      });\n\n    } else {\n      setIndexes(prevState => ({\n        nextIndex: prevState.currentIndex,\n        currentIndex: prevState.currentIndex - 1,\n        previousIndex:\n          prevState.currentIndex - 1 <= 0\n            ? cardItems.length - 1\n            : prevState.currentIndex - 2\n      }));\n    }\n  }, [indexes.currentIndex]);\n\n  \n  useEffect(() => {\n    const transitionInterval = setInterval(() => {\n      autoRotate && handleCardTransition();\n    }, 2000);\n    return () => clearInterval(transitionInterval);\n  }, [handleCardTransition, indexes, autoRotate]);\n\n\n  console.log(indexes)\n  return (\n    <div className={`${styles.container}`}>\n      <span onClick={handleLeftButton} >{leftButton}</span>\n      <ul className={`${styles.cardCarousel} ${containerClassName}`}>\n        {cardItems.map((card, index) => (\n          <li\n            key={card.key}\n            className={`${cardClassName} ${styles.card} ${setCardStatus(indexes, index)}`}\n          >\n            { card }\n          </li>\n        ))}\n        </ul>\n        <span onClick={handleCardTransition} >{rightButton}</span>\n    </div>\n  );\n}\n\n\n","import React, {StyleSheet} from 'react'\n\nimport { StackedCarousel } from 'react-stacked-carousel'\nimport 'react-stacked-carousel/dist/index.css';\n\nconst App = () => {\n\n  return (\n    <div>\n      <h1>THis is a test</h1>\n      <StackedCarousel\n        autoRotate={false}\n        containerClassName={\"container\"}\n        cardClassName=\"card\"\n        leftButton={<button>{\"<\"}</button>}\n        rightButton={<button>{\">\"}</button>}\n\n      >\n\n        <div key={'child6'}>\n          <h2>1 Card</h2>\n        </div>\n\n        <div key={'child7'}>\n          <h2>2 Card</h2>\n        </div>\n        \n        <div key={'child8'}>\n          <h2>3 Card</h2>\n        </div>\n\n        <div key={'child9'}>\n          <h2>4 Card</h2>\n        </div>\n\n        <div key={'child10'}>\n          <h2>5 Card</h2>\n        </div>\n\n        <div key={'child11'}>\n          <h2>6 Card</h2>\n        </div>\n\n        <div key={'child12'}>\n          <h2>7 Card</h2>\n        </div>\n        \n      </StackedCarousel>\n\n      </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}